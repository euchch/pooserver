apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-config
  namespace: pihole
data:
  WEBPASSWORD: secret
  TZ: 'America/New_York'
  DNS1: '10.43.34.1#5353'
  DNS2: '10.43.34.1#5353'
  # DNS2: unbound-dns-svc.unbound.svc.cluster.local

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-bootstrap
  namespace: pihole
  labels:
    app: pihole
data:
  white.list: |-
    MS teams events-1,self.events.data.microsoft.com
    MS teams events-2,teams.events.data.microsoft.com

  regex-black.list: |-
    All netflix,^.*.netflix.com$

  ad.list: |-
    1,default,https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
    1,porn,https://raw.githubusercontent.com/chadmayfield/pihole-blocklists/master/lists/pi_blocklist_porn_top1m.list
    1,spam404 main,https://raw.githubusercontent.com/Spam404/lists/master/main-blacklist.txt
    1,firebog adguard,https://v.firebog.net/hosts/AdguardDNS.txt
    1,bigdrago main,https://raw.githubusercontent.com/bigdargon/hostsVN/master/hosts
    1,SmartTV,https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/SmartTV.txt
    1,developerdan ads,https://www.github.developerdan.com/hosts/lists/ads-and-tracking-extended.txt
    1,developerdan aggressive,https://www.github.developerdan.com/hosts/lists/tracking-aggressive-extended.txt
    1,VeleSila,https://raw.githubusercontent.com/VeleSila/yhosts/master/hosts
    1,quidsup malwares,https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-malware.txt
    1,simple_ad,https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
    1,youtubelist,https://raw.githubusercontent.com/kboghdady/youTube_ads_4_pi-hole/master/youtubelist.txt
    1,ray adguard,https://raw.githubusercontent.com/r-a-y/mobile-hosts/master/AdguardMobileAds.txt
    1,anudeepND,https://raw.githubusercontent.com/anudeepND/blacklist/master/adservers.txt
    1,firebog w3kbl,https://v.firebog.net/hosts/static/w3kbl.txt
    1,blocklistproject ransomware,https://raw.githubusercontent.com/blocklistproject/Lists/master/ransomware.txt
    1,RPiList malware,https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/malware
    1,RPiList phishing,https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/Phishing-Angriffe
    1,blocklistproject phishing,https://raw.githubusercontent.com/blocklistproject/Lists/master/phishing.txt

  init.sh: |-
    #!/bin/bash

    SOURCE=`dirname ${BASH_SOURCE[0]}`
    echo "switching to $SOURCE"
    pushd $SOURCE

    $(pwd)/refresh-ads.sh
    $(pwd)/blacklist-regex.sh
    $(pwd)/whitelist.sh

    popd

  whitelist.sh: |-
    #!/bin/bash

    printf "\n### whitelist.sh ###\n\n"

    ADLIST_FILE=/bootstrap/white.list
    SOURCE=`dirname ${BASH_SOURCE[0]}`
    echo "switching to $SOURCE"
    pushd $SOURCE

    if [ ! -f "$ADLIST_FILE" ]; then
      echo "$ADLIST_FILE is missing."
      popd
      exit
    fi

    echo "Clearing out whitelist"
    pihole -w --nuke

    while IFS= read -r line || [[ "$line" ]]; do
        IFS=',' read -ra my_rec <<< "$line"   # str is read into an array as tokens separated by IFS
        echo "url: ${my_rec[1]}, desc: ${my_rec[0]}"
        pihole -w ${my_rec[1]} --comment "${my_rec[0]}"
    done < $ADLIST_FILE

    popd

  blacklist-regex.sh: |-
    #!/bin/bash

    printf "\n### blacklist-regex.sh ###\n\n"

    ADLIST_FILE=/bootstrap/regex-black.list
    SOURCE=`dirname ${BASH_SOURCE[0]}`
    echo "switching to $SOURCE"
    pushd $SOURCE

    if [ ! -f "$ADLIST_FILE" ]; then
      echo "$ADLIST_FILE is missing."
      popd
      exit
    fi

    pihole regex --nuke

    while IFS= read -r line || [[ "$line" ]]; do
        IFS=',' read -ra my_rec <<< "$line"   # str is read into an array as tokens separated by IFS
        echo "regex: ${my_rec[1]}, desc: ${my_rec[0]}"
        pihole regex ${my_rec[1]} --comment "${my_rec[0]}"
    done < $ADLIST_FILE

    popd

  refresh-ads.sh: |-
    #!/bin/bash

    printf "\n### refresh-ads.sh ###\n\n"

    ADLIST_FILE=/bootstrap/ad.list
    SOURCE=`dirname ${BASH_SOURCE[0]}`
    echo "switching to $SOURCE"
    pushd $SOURCE

    if [ ! -f "$ADLIST_FILE" ]; then
      echo "$ADLIST_FILE is missing."
      popd
      exit
    fi

    # Since new pihole server creates dbs/setting files we have to wait, 
    # I just don't know WHAT we're waiting for but 30s seems like a sweet spot
    echo "sleeping..."
    sleep 30
    # echo Forcing WAL to avoid DB lock and paralel write requests
    # sqlite3 /etc/pihole/gravity.db "PRAGMA journal_mode=WAL;"

    sqlite3 /etc/pihole/gravity.db "DELETE FROM adlist"
    sqlite3 /etc/pihole/gravity.db "INSERT INTO adlist (address, enabled, comment) VALUES ('https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts', 1, 'default')"

    while IFS= read -r line || [[ "$line" ]]; do
        IFS=',' read -ra my_rec <<< "$line"   # str is read into an array as tokens separated by IFS
        echo "enabled: ${my_rec[0]}, desc: ${my_rec[1]}, url: ${my_rec[2]}"
        sqlite3 /etc/pihole/gravity.db "INSERT INTO adlist (address, enabled, comment) VALUES ('${my_rec[2]}', ${my_rec[0]}, '${my_rec[1]}')"
    done < $ADLIST_FILE

    sleep 5
    # echo Undoing WAL for better performances, not a must so we are good if things crash before this one
    # sqlite3 /etc/pihole/gravity.db "PRAGMA journal_mode=DELETE;"
    # sleep 5

    sudo pihole -g

    # sleep 5
    # echo Undoing WAL for better performances, not a must so we are good if things crash before this one (sometimes first attempt fails)
    # sqlite3 /etc/pihole/gravity.db "PRAGMA journal_mode=DELETE;"
    # sleep 5

    popd

  livecheck.sh: |-
    #!/bin/bash

    TESTDOMAIN="pihole.poos.home"
    TESTSERVER="127.0.0.1"
    DOMAINIP=`dig ${TESTDOMAIN} @${TESTSERVER} +short`
    # If something that is not a single IP address is returned - it's an error message
    CHARCNT=$(wc -m <<< ${DOMAINIP})
    if [ "${CHARCNT}" -ge 18 ]; then
      echo "resolution error: ${DOMAINIP}"
      exit 1
    fi

  healthcheck.sh: |-
    #!/bin/bash

    GRAVITYDB='/etc/pihole/gravity.db'
    DOMAINSQUERY='select count(*) from gravity;'
    MINBLOCKLIST='100'
    BLOCKLIST=$(sqlite3 ${GRAVITYDB} "${DOMAINSQUERY}")
    if [ "${BLOCKLIST}" -le ${MINBLOCKLIST} ]; then 
      echo 'Blocked domains count is too low' >&2 
      exit 1
    fi
