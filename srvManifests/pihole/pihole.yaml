apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "pihole"
  namespace: "pihole"
  labels:
    app.kubernetes.io/name: pihole
    app: pihole
spec:
  serviceName: pihole
  replicas: 1
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app.kubernetes.io/name: pihole
      app: pihole
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pihole
        app: pihole
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - pihole
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: "pihole"
          image: "pihole/pihole:2021.10"
          ports:
            - containerPort: 53
              protocol: "UDP"
            - containerPort: 53
              protocol: "TCP"
            - containerPort: 67
              protocol: "UDP"
            - containerPort: 80
              protocol: "TCP"
            - containerPort: 443
              protocol: "TCP"
          env:
            - name:   "TZ"
              valueFrom:
                configMapKeyRef:
                  name: pihole-config
                  key: TZ
            - name:   "WEBPASSWORD"
              valueFrom:
                configMapKeyRef:
                  name: pihole-config
                  key: WEBPASSWORD
            - name:   "DNS1"
              valueFrom:
                configMapKeyRef:
                  name: pihole-config
                  key: DNS1
            - name:   "DNS2"
              valueFrom:
                configMapKeyRef:
                  name: pihole-config
                  key: DNS2
            - name:   "VIRTUAL_HOST"
              value:  "pi.hole"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "1"
          volumeMounts:
            - name: pihole-etc
              mountPath: '/etc/pihole'
            - name: pihole-dnsmasq
              mountPath: '/etc/dnsmasq.d'
  volumeClaimTemplates:
    - metadata:
        name: pihole-etc
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 500Mi
    - metadata:
        name: pihole-dnsmasq
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Mi
